// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CarStatusMessage.proto

#ifndef PROTOBUF_CarStatusMessage_2eproto__INCLUDED
#define PROTOBUF_CarStatusMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SlotHub {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CarStatusMessage_2eproto();
void protobuf_AssignDesc_CarStatusMessage_2eproto();
void protobuf_ShutdownFile_CarStatusMessage_2eproto();

class CarStatusMessage;

// ===================================================================

class CarStatusMessage : public ::google::protobuf::Message {
 public:
  CarStatusMessage();
  virtual ~CarStatusMessage();

  CarStatusMessage(const CarStatusMessage& from);

  inline CarStatusMessage& operator=(const CarStatusMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarStatusMessage& default_instance();

  void Swap(CarStatusMessage* other);

  // implements Message ----------------------------------------------

  CarStatusMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarStatusMessage& from);
  void MergeFrom(const CarStatusMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 car_number = 1;
  inline bool has_car_number() const;
  inline void clear_car_number();
  static const int kCarNumberFieldNumber = 1;
  inline ::google::protobuf::int32 car_number() const;
  inline void set_car_number(::google::protobuf::int32 value);

  // required int32 current_laptime = 2;
  inline bool has_current_laptime() const;
  inline void clear_current_laptime();
  static const int kCurrentLaptimeFieldNumber = 2;
  inline ::google::protobuf::int32 current_laptime() const;
  inline void set_current_laptime(::google::protobuf::int32 value);

  // required int32 fastest_laptime = 3;
  inline bool has_fastest_laptime() const;
  inline void clear_fastest_laptime();
  static const int kFastestLaptimeFieldNumber = 3;
  inline ::google::protobuf::int32 fastest_laptime() const;
  inline void set_fastest_laptime(::google::protobuf::int32 value);

  // required int32 laps = 4;
  inline bool has_laps() const;
  inline void clear_laps();
  static const int kLapsFieldNumber = 4;
  inline ::google::protobuf::int32 laps() const;
  inline void set_laps(::google::protobuf::int32 value);

  // required int32 fuel_status = 5;
  inline bool has_fuel_status() const;
  inline void clear_fuel_status();
  static const int kFuelStatusFieldNumber = 5;
  inline ::google::protobuf::int32 fuel_status() const;
  inline void set_fuel_status(::google::protobuf::int32 value);

  // required bool active = 6;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 6;
  inline bool active() const;
  inline void set_active(bool value);

  // required bool in_pit = 7;
  inline bool has_in_pit() const;
  inline void clear_in_pit();
  static const int kInPitFieldNumber = 7;
  inline bool in_pit() const;
  inline void set_in_pit(bool value);

  // required int32 pit_stops = 8;
  inline bool has_pit_stops() const;
  inline void clear_pit_stops();
  static const int kPitStopsFieldNumber = 8;
  inline ::google::protobuf::int32 pit_stops() const;
  inline void set_pit_stops(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SlotHub.CarStatusMessage)
 private:
  inline void set_has_car_number();
  inline void clear_has_car_number();
  inline void set_has_current_laptime();
  inline void clear_has_current_laptime();
  inline void set_has_fastest_laptime();
  inline void clear_has_fastest_laptime();
  inline void set_has_laps();
  inline void clear_has_laps();
  inline void set_has_fuel_status();
  inline void clear_has_fuel_status();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_in_pit();
  inline void clear_has_in_pit();
  inline void set_has_pit_stops();
  inline void clear_has_pit_stops();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 car_number_;
  ::google::protobuf::int32 current_laptime_;
  ::google::protobuf::int32 fastest_laptime_;
  ::google::protobuf::int32 laps_;
  ::google::protobuf::int32 fuel_status_;
  bool active_;
  bool in_pit_;
  ::google::protobuf::int32 pit_stops_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CarStatusMessage_2eproto();
  friend void protobuf_AssignDesc_CarStatusMessage_2eproto();
  friend void protobuf_ShutdownFile_CarStatusMessage_2eproto();

  void InitAsDefaultInstance();
  static CarStatusMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// CarStatusMessage

// required int32 car_number = 1;
inline bool CarStatusMessage::has_car_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CarStatusMessage::set_has_car_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CarStatusMessage::clear_has_car_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CarStatusMessage::clear_car_number() {
  car_number_ = 0;
  clear_has_car_number();
}
inline ::google::protobuf::int32 CarStatusMessage::car_number() const {
  return car_number_;
}
inline void CarStatusMessage::set_car_number(::google::protobuf::int32 value) {
  set_has_car_number();
  car_number_ = value;
}

// required int32 current_laptime = 2;
inline bool CarStatusMessage::has_current_laptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CarStatusMessage::set_has_current_laptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CarStatusMessage::clear_has_current_laptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CarStatusMessage::clear_current_laptime() {
  current_laptime_ = 0;
  clear_has_current_laptime();
}
inline ::google::protobuf::int32 CarStatusMessage::current_laptime() const {
  return current_laptime_;
}
inline void CarStatusMessage::set_current_laptime(::google::protobuf::int32 value) {
  set_has_current_laptime();
  current_laptime_ = value;
}

// required int32 fastest_laptime = 3;
inline bool CarStatusMessage::has_fastest_laptime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CarStatusMessage::set_has_fastest_laptime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CarStatusMessage::clear_has_fastest_laptime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CarStatusMessage::clear_fastest_laptime() {
  fastest_laptime_ = 0;
  clear_has_fastest_laptime();
}
inline ::google::protobuf::int32 CarStatusMessage::fastest_laptime() const {
  return fastest_laptime_;
}
inline void CarStatusMessage::set_fastest_laptime(::google::protobuf::int32 value) {
  set_has_fastest_laptime();
  fastest_laptime_ = value;
}

// required int32 laps = 4;
inline bool CarStatusMessage::has_laps() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CarStatusMessage::set_has_laps() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CarStatusMessage::clear_has_laps() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CarStatusMessage::clear_laps() {
  laps_ = 0;
  clear_has_laps();
}
inline ::google::protobuf::int32 CarStatusMessage::laps() const {
  return laps_;
}
inline void CarStatusMessage::set_laps(::google::protobuf::int32 value) {
  set_has_laps();
  laps_ = value;
}

// required int32 fuel_status = 5;
inline bool CarStatusMessage::has_fuel_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CarStatusMessage::set_has_fuel_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CarStatusMessage::clear_has_fuel_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CarStatusMessage::clear_fuel_status() {
  fuel_status_ = 0;
  clear_has_fuel_status();
}
inline ::google::protobuf::int32 CarStatusMessage::fuel_status() const {
  return fuel_status_;
}
inline void CarStatusMessage::set_fuel_status(::google::protobuf::int32 value) {
  set_has_fuel_status();
  fuel_status_ = value;
}

// required bool active = 6;
inline bool CarStatusMessage::has_active() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CarStatusMessage::set_has_active() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CarStatusMessage::clear_has_active() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CarStatusMessage::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool CarStatusMessage::active() const {
  return active_;
}
inline void CarStatusMessage::set_active(bool value) {
  set_has_active();
  active_ = value;
}

// required bool in_pit = 7;
inline bool CarStatusMessage::has_in_pit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CarStatusMessage::set_has_in_pit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CarStatusMessage::clear_has_in_pit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CarStatusMessage::clear_in_pit() {
  in_pit_ = false;
  clear_has_in_pit();
}
inline bool CarStatusMessage::in_pit() const {
  return in_pit_;
}
inline void CarStatusMessage::set_in_pit(bool value) {
  set_has_in_pit();
  in_pit_ = value;
}

// required int32 pit_stops = 8;
inline bool CarStatusMessage::has_pit_stops() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CarStatusMessage::set_has_pit_stops() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CarStatusMessage::clear_has_pit_stops() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CarStatusMessage::clear_pit_stops() {
  pit_stops_ = 0;
  clear_has_pit_stops();
}
inline ::google::protobuf::int32 CarStatusMessage::pit_stops() const {
  return pit_stops_;
}
inline void CarStatusMessage::set_pit_stops(::google::protobuf::int32 value) {
  set_has_pit_stops();
  pit_stops_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SlotHub

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CarStatusMessage_2eproto__INCLUDED
